plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id "com.github.ben-manes.versions" version '0.46.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.jmailen.kotlinter' version "3.12.0"
}

// mainName matters only if you are hosting your slides via HTTP
// Change mainName to the name of Kotlin file that has the presentation you want to serve
def mainName = "SlidesKt"

application {
    mainClassName = mainName
}

group 'com.github.pambrose'
version '1.1.2'

repositories {
    google()
    mavenCentral()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation "com.github.kslides.kslides:kslides-core:$kslides_version"
    implementation "io.ktor:ktor-server-html-builder:$ktor_version"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-css:$css_version"
}

task stage(dependsOn: ['uberjar', 'build', 'clean'])
build.mustRunAfter clean

shadowJar {
    zip64 true
    mergeServiceFiles()
    exclude "META-INF/*.SF"
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude "LICENSE*"
}

task uberjar(type: Jar, dependsOn: shadowJar) {
    zip64 true
    archiveFileName = 'kslides.jar'
    manifest {
        attributes('Implementation-Title': 'kslides')
        attributes('Implementation-Version': version)
        attributes('Built-Date': new Date())
        attributes('Built-JDK': System.getProperty('java.version'))
        attributes('Main-Class': mainName)
    }
    from zipTree(shadowJar.archiveFile)
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += ['-Xbackend-threads=8',
                             //'-Xcontext-receivers',
                             //'-Xskip-prerelease-check',
        ]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += ['-Xbackend-threads=8',
                             //'-Xcontext-receivers',
                             //'-Xskip-prerelease-check',
        ]
    }
}

kotlinter {
    ignoreFailures = false
    //indentSize = 2
    reporters = ['checkstyle', 'plain']
    experimentalRules = false
    disabledRules = ["no-wildcard-imports",
                     "indent",
                     "final-newline",
                     "comment-spacing",
                     "max-line-length",
                     "no-multi-spaces",
                     "no-trailing-spaces",
                     "wrapping",
                     "no-unit-return",
                     "filename",
                     "multiline-if-else",]
}