plugins {
  id 'java'
  id 'application'
  id 'org.jetbrains.kotlin.jvm' version '2.1.0'
  id "com.github.ben-manes.versions" version '0.51.0'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
//  id 'org.jmailen.kotlinter' version "4.5.0"
}

// mainName matters only if you are hosting your slides via HTTP
// Change mainName to the name of Kotlin file that has the presentation you want to serve
def mainName = "SlidesKt"

application {
  mainClassName = mainName
}

group 'com.github.pambrose'
version '1.3.0'

repositories {
  google()
  mavenCentral()
  maven { url = 'https://jitpack.io' }
}

dependencies {
  implementation "com.github.kslides.kslides:kslides-core:$kslides_version"
}

tasks.register('stage') { dependsOn 'uberjar', 'build', 'clean' }
build.mustRunAfter clean

shadowJar {
  zip64 true
  mergeServiceFiles()
  exclude "META-INF/*.SF"
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
  exclude "LICENSE*"
}

tasks.register('uberjar', Jar) {
  dependsOn shadowJar
  zip64 true
  archiveFileName = 'kslides.jar'
  manifest {
    attributes('Implementation-Title': 'kslides')
    attributes('Implementation-Version': version)
    attributes('Built-Date': new Date())
    attributes('Built-JDK': System.getProperty('java.version'))
    attributes('Main-Class': mainName)
  }
  from zipTree(shadowJar.archiveFile)
}

kotlin {
  jvmToolchain(17)
}

compileKotlin {
  kotlinOptions {
    freeCompilerArgs += ['-Xbackend-threads=8']
  }
}

compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs += ['-Xbackend-threads=8']
  }
}

//kotlinter {
//  ignoreFailures = false
//  reporters = ['checkstyle', 'plain']
//}
